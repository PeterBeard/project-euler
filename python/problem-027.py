"""
Copyright 2016 Peter Beard
Distributed under the GNU GPL v2. For full terms, see the LICENSE file.

Problem #027

Euler discovered the remarkable quadratic formula:

n² + n + 41

It turns out that the formula will produce 40 primes for the consecutive values
n = 0 to 39. However, when n = 40, 402 + 40 + 41 = 40(40 + 1) + 41 is divisible
by 41, and certainly when n = 41, 41² + 41 + 41 is clearly divisible by 41.

The incredible formula  n² − 79n + 1601 was discovered, which produces 80 primes
for the consecutive values n = 0 to 79. The product of the coefficients, −79 and
1601, is −126479.

Considering quadratics of the form:

    n² + an + b, where |a| < 1000 and |b| < 1000

    where |n| is the modulus/absolute value of n
    e.g. |11| = 11 and |−4| = 4

Find the product of the coefficients, a and b, for the quadratic expression that
produces the maximum number of primes for consecutive values of n, starting with
n = 0.
"""
from util import is_prime

def consecutive_primes(a, b):
    """
    Find the number of consecutive primes generated by the formula
    n² + an + b
    """
    n = 0
    while True:
        if not is_prime(n*n + a*n + b):
            return n
        n += 1

def solution():
    max_count = 0
    max_a = 0
    max_b = 0
    for a in range(-1000,1001):
        for b in range(-1000,1001):
            c = consecutive_primes(a, b)
            if max_count < c:
                max_count = c
                max_a = a
                max_b = b

    return max_a * max_b

print("The product of the a and b that produce the most primes for consecutive n is {}".format(solution()))
