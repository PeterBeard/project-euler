-- Copyright 2016 Peter Beard
-- Distributed under the GNU GPL v2. For full terms, see the LICENSE file.
--
-- The sequence of triangle numbers is generated by adding the natural numbers. So
-- the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten
-- terms would be:
-- 
-- 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
-- 
-- Let us list the factors of the first seven triangle numbers:
-- 
--      1: 1
--      3: 1,3
--      6: 1,2,3,6
--     10: 1,2,5,10
--     15: 1,3,5,15
--     21: 1,3,7,21
--     28: 1,2,4,7,14,28
-- 
-- We can see that 28 is the first triangle number to have over five divisors.
-- 
-- What is the value of the first triangle number to have over five hundred divisors?

-- Get the square root of an Int (rounded up)
isqrt :: Int -> Int
isqrt = ceiling . sqrt . fromIntegral

-- Find the nth triangle number
nthTriangle :: Int -> Int
nthTriangle n = div (n * (n + 1)) 2

-- Find the number of divisors of an integer
numDivisors :: Int -> Int
numDivisors n = 2 + 2 * (length $ filter (\x -> mod n x == 0) [1..maxFactor])
    where maxFactor = isqrt n

solution = nthTriangle $ fst $ head $ filter (\(n, d) -> d > 500) indexedTris
    where indexedTris = zip [1..] $ map numDivisors $ map nthTriangle [1..]

main = putStrLn $ "The solution is " ++ (show solution)
