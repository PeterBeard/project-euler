// Copyright 2016 Peter Beard
// Distributed under the GNU GPL v2. For full terms, see the LICENSE file.
//
// Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
// Triangle 	  	Tn=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
// Pentagonal 	  	Pn=n(3n−1)/2 	  	1, 5, 12, 22, 35, ...
// Hexagonal 	  	Hn=n(2n−1) 	  	1, 6, 15, 28, 45, ...
// 
// It can be verified that T285 = P165 = H143 = 40755.
// 
// Find the next triangle number that is also pentagonal and hexagonal.
#![feature(test)]
extern crate test;
extern crate euler_util;
use euler_util::{is_triangular, is_hexagonal};

pub fn solution() -> u64 {
    // Generate some pentagonal numbers and test them
    for n in 166..50000 {
        let p = n*(3*n - 1)/2;

        if is_triangular(p) && is_hexagonal(p) {
            return p
        }
    }
    0
}

fn main() {
    println!("The next pentagonal number that is also triangular and hexagonal is {}", solution());
}

#[cfg(test)]
mod tests {
    use super::*;
    use test::Bencher;

    #[test]
    fn correct() {
        assert_eq!(1533776805, solution());
    }

    #[bench]
    fn bench(b: &mut Bencher) {
        b.iter(|| solution());
    }
}
