// Copyright 2016 Peter Beard
// Distributed under the GNU GPL v2. For full terms, see the LICENSE file.
//
// Euler discovered the remarkable quadratic formula:
// 
// n² + n + 41
// 
// It turns out that the formula will produce 40 primes for the consecutive
// values n = 0 to 39. However, when n = 40, 402 + 40 + 41 = 40(40 + 1) + 41
// is divisible by 41, and certainly when n = 41, 41² + 41 + 41 is clearly
// divisible by 41.
// 
// The incredible formula  n² − 79n + 1601 was discovered, which produces 80
// primes for the consecutive values n = 0 to 79. The product of the
// coefficients, −79 and 1601, is −126479.
// 
// Considering quadratics of the form:
// 
//     n² + an + b, where |a| < 1000 and |b| < 1000
// 
//     where |n| is the modulus/absolute value of n
//     e.g. |11| = 11 and |−4| = 4
// 
// Find the product of the coefficients, a and b, for the quadratic expression
// that produces the maximum number of primes for consecutive values of n,
// starting with n = 0.

extern crate euler_util;
use euler_util::is_prime;

/// Find the number of primes generated by consecutive n for the formula n^2 + an + b
fn consecutive_primes(a: i32, b: i32) -> i32 {
    let mut n = 0;
    // If b is composite, n=0 won't be prime
    if !is_prime(b as i64) {
        return 0;
    }
    loop {
        let value = (n*n + a*n + b) as i64;
        if value < 0 || !is_prime(value) {
            return n;
        }
        n += 1;
    }
}

fn main() {
    let mut max_a = 0;
    let mut max_b = 0;
    let mut max_primes = 0;

    for a in -999..1000 {
        for b in -999..1000 {
            let p = consecutive_primes(a, b);
            if p > max_primes {
                max_primes = p;
                max_a = a;
                max_b = b;
            }
        }
    }
    println!("The product of the coefficients that produce the maximum number of primes is {}", max_a*max_b);
}
